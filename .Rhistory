names(test_data)[1] <- "activity"
# load subject table
subject_train <- read.table("train/subject_train.txt", header = FALSE,
sep = "", col.names=c("subject"))
subject_test <- read.table("test/subject_test.txt", header = FALSE,
sep = "", col.names=c("subject"))
#bind subject table to data as the first column
train_data <- cbind(subject_train, train_data)
test_data <- cbind(subject_test, test_data)
train_data <- cbind(train_data[,c(1,2)], data.frame(mode=rep(c("train"),7352)),train_data[,3:563])
test_data <- cbind(test_data[,c(1,2)], data.frame(mode=rep(c("test"),2947)),test_data[,3:563])
dim(train_data)
dim(test_data)
names(train_data) == names(test_data)
!(names(train_data) == names(test_data))
sum(!(names(train_data) == names(test_data)))
dim(test_data)
dim(train_data)
data_fin <- rbind(train_data,test_data)
dim(data_fin)
head(data_fin)
write.csv(data_fin, "tidydata.csv")
rm(list=ls())
# read features table
features <- read.table("features.txt",
header=FALSE,
sep="",
stringsAsFactors = FALSE,
colClasses =c("numeric", "character")
)
# load train data
train_data <- read.table("train/x_train.txt",
header = FALSE,
sep = "",
colClasses = "numeric"
)
# load test data
test_data <- read.table("test/x_test.txt",
header = FALSE,
sep = "",
colClasses = "numeric"
)
# set column names of train and test data from 2nd column of features table
names(train_data) <- features[,2]
names(test_data) <- features[,2]
#delete features DF
rm("features")
# load activity_labels
activity_labels <- read.table("activity_labels.txt",
header=FALSE, sep="",
stringsAsFactors = FALSE,
colClasses =c("numeric", "character")
)
# load activity table from train and test as factor and set the levels
# of factor according to activity_labels
y_train <- read.table("train/y_train.txt", header = FALSE,
sep ="", colClasses = "factor")
y_test <- read.table("test/y_test.txt", header = FALSE, sep ="",
colClasses = "factor")
attributes(y_train$V1)$levels <- activity_labels$V2
attributes(y_test$V1)$levels <- activity_labels$V2
#bind data table with activity column
train_data <- cbind(y_train, train_data)
test_data <- cbind(y_test, test_data)
# change the name of activity column to activity
names(train_data)[1] <- "activity"
names(test_data)[1] <- "activity"
# load subject table
subject_train <- read.table("train/subject_train.txt", header = FALSE,
sep = "", col.names=c("subject"))
subject_test <- read.table("test/subject_test.txt", header = FALSE,
sep = "", col.names=c("subject"))
#bind subject table to data as the first column
train_data <- cbind(subject_train, train_data)
test_data <- cbind(subject_test, test_data)
train_data <- cbind(train_data[,c(1,2)], data.frame(mode=rep(c("train"),7352)),train_data[,3:563])
test_data <- cbind(test_data[,c(1,2)], data.frame(mode=rep(c("test"),2947)),test_data[,3:563])
data_fin <- rbind(train_data,test_data)
write.csv(data_fin, "tidydata.csv")
rm(list = ls())
# read features table
features <- read.table("features.txt",
header=FALSE,
sep="",
stringsAsFactors = FALSE,
colClasses =c("numeric", "character")
)
# load train data
train_data <- read.table("train/x_train.txt",
header = FALSE,
sep = "",
colClasses = "numeric"
)
# load test data
test_data <- read.table("test/x_test.txt",
header = FALSE,
sep = "",
colClasses = "numeric"
)
# set column names of train and test data from 2nd column of features table
names(train_data) <- features[,2]
names(test_data) <- features[,2]
#delete features DF
rm("features")
# load activity_labels
activity_labels <- read.table("activity_labels.txt",
header=FALSE, sep="",
stringsAsFactors = FALSE,
colClasses =c("numeric", "character")
)
# load activity table from train and test as factor and set the levels
# of factor according to activity_labels
y_train <- read.table("train/y_train.txt", header = FALSE,
sep ="", colClasses = "factor")
y_test <- read.table("test/y_test.txt", header = FALSE, sep ="",
colClasses = "factor")
attributes(y_train$V1)$levels <- activity_labels$V2
attributes(y_test$V1)$levels <- activity_labels$V2
#bind data table with activity column
train_data <- cbind(y_train, train_data)
test_data <- cbind(y_test, test_data)
# change the name of activity column to activity
names(train_data)[1] <- "activity"
names(test_data)[1] <- "activity"
# delete activity_labels, y_train, y_test DFs
rm("activity_labels") ; rm("y_train"); rm("y_test")
# load subject table
subject_train <- read.table("train/subject_train.txt", header = FALSE,
sep = "", col.names=c("subject"))
subject_test <- read.table("test/subject_test.txt", header = FALSE,
sep = "", col.names=c("subject"))
#bind subject table to data as the first column
train_data <- cbind(subject_train, train_data)
test_data <- cbind(subject_test, test_data)
# delete subject_train, subject_test DF
rm("subject_train") ; rm("subject_test")
# create a column for mode (either train or test) and put it into the table as 3rd column
train_data <- cbind(train_data[,c(1,2)], data.frame(mode=rep(c("train"),7352)),train_data[,3:563])
test_data <- cbind(test_data[,c(1,2)], data.frame(mode=rep(c("test"),2947)),test_data[,3:563])
#combine train data and test data into one table
data_fin <- rbind(train_data,test_data)
# delete train_data, test_data DF
rm("train_data") ; rm("test_data")
# output the final data to a csv file
write.csv(data_fin, "tidydata.csv")
head(data_fin[,1:5])
tail(data_fin[,1:5])
names(data_fin)
dim(data_fin)
library(dplyr)
?select
names(data_fin)
select(data_fin, contains("mean", ignore.case = TRUE))
names(select(data_fin, contains("mean", ignore.case = TRUE)))
names(select(data_fin, contains("mean()", ignore.case = TRUE)))
names(select(data_fin, contains("mean()", ignore.case = FALSE)))
names(select(data_fin, contains("-mean()", ignore.case = TRUE)))
names(select(data_fin, contains("std()", ignore.case = FALSE)))
names(select(data_fin, contains("-std()", ignore.case = FALSE)))
dim(select(data_fin, contains("-std()", ignore.case = FALSE)))
dim(select(data_fin, contains("-mean()", ignore.case = TRUE)))
View(data_fin)
View(data_fin)
tidy_data <- cbind(data_fin_annotation, data_fin_mean, data_fin_std)
data_fin_mean <- select(data_fin, contains("mean()", ignore.case = FALSE))
data_fin_std <- select(data_fin, contains("std()", ignore.case = FALSE))
data_fin_annotation <- select(data_fin, 1:3)
tidy_data <- cbind(data_fin_annotation, data_fin_mean, data_fin_std)
View(tidy_data)
View(tidy_data)
write.csv(tidy_data, "tidydata.csv")
select(tidy_data,1)
select(tidy_data,2)
names(tidy_data)
names(tidy_data)
rm(list=ls())
library(dplyr)
# read features table
features <- read.table("features.txt",
header=FALSE,
sep="",
stringsAsFactors = FALSE,
colClasses =c("numeric", "character")
)
# load train data
train_data <- read.table("train/x_train.txt",
header = FALSE,
sep = "",
colClasses = "numeric"
)
# load test data
test_data <- read.table("test/x_test.txt",
header = FALSE,
sep = "",
colClasses = "numeric"
)
# set column names of train and test data from 2nd column of features table
names(train_data) <- features[,2]
names(test_data) <- features[,2]
#delete features DF
rm("features")
# load activity_labels
activity_labels <- read.table("activity_labels.txt",
header=FALSE, sep="",
stringsAsFactors = FALSE,
colClasses =c("numeric", "character")
)
# load activity table from train and test as factor and set the levels
# of factor according to activity_labels
y_train <- read.table("train/y_train.txt", header = FALSE,
sep ="", colClasses = "factor")
y_test <- read.table("test/y_test.txt", header = FALSE, sep ="",
colClasses = "factor")
attributes(y_train$V1)$levels <- activity_labels$V2
attributes(y_test$V1)$levels <- activity_labels$V2
#bind data table with activity column
train_data <- cbind(y_train, train_data)
test_data <- cbind(y_test, test_data)
# change the name of activity column to activity
names(train_data)[1] <- "activity"
names(test_data)[1] <- "activity"
# delete activity_labels, y_train, y_test DFs
rm("activity_labels") ; rm("y_train"); rm("y_test")
# load subject table
subject_train <- read.table("train/subject_train.txt", header = FALSE,
sep = "", col.names=c("subject"))
subject_test <- read.table("test/subject_test.txt", header = FALSE,
sep = "", col.names=c("subject"))
#bind subject table to data as the first column
train_data <- cbind(subject_train, train_data)
test_data <- cbind(subject_test, test_data)
# delete subject_train, subject_test DF
rm("subject_train") ; rm("subject_test")
# create a column for mode (either train or test) and put it into the table as 3rd column
train_data <- cbind(train_data[,c(1,2)], data.frame(mode=rep(c("train"),7352)),train_data[,3:563])
test_data <- cbind(test_data[,c(1,2)], data.frame(mode=rep(c("test"),2947)),test_data[,3:563])
#combine train data and test data into one table
data_fin <- rbind(train_data,test_data)
# delete train_data, test_data DF
rm("train_data") ; rm("test_data")
#select mean and std columns along with subject,activity, mode columns.
data_fin_mean <- select(data_fin, contains("mean()", ignore.case = FALSE))
data_fin_std <- select(data_fin, contains("std()", ignore.case = FALSE))
data_fin_annotation <- select(data_fin, 1:3)
tidy_data <- cbind(data_fin_annotation, data_fin_mean, data_fin_std)
# output the final data to a csv file
write.csv(tidy_data, "tidydata.csv")
by_subject_activity <- group_by(tidy_data, subject, activity)
by_subject-activity
by_subject_activity
View(by_subject_activity)
View(by_subject_activity)
summarise(by_subject_activity)
summarise(by_subject_activity, mean)
summarise(by_subject_activity, mean(subject,activity))
dim(by_subject_activity)
summarise(by_subject_activity, mean(4:69))
summarise(by_subject_activity, mean(by_subject_activity[,4:69]))
by_sub_act <- tbl_df(by_subject_activity)
summarise_each(by_sub_act, mean)
summarise_each(by_sub_act, mean, c(-subject, -activity,-mode))
summarise_each(by_sub_act, fund(mean), -c("subject", "activity","mode"))
summarise_each(by_sub_act, fun(mean), -c("subject", "activity","mode"))
summarise_each(by_sub_act, funs(mean), -c("subject", "activity","mode"))
summarise_each(by_sub_act, funs(mean))
summarise_each(by_sub_act, funs(mean), -subject, -activity, -mode)
sum <- summarise_each(by_sub_act, funs(mean), -subject, -activity, -mode)
dim(sum)
by_sbu_act
by_sub_act
by_sub_act <- group_by(by_sub_act, subject, activity)
by_sub_act
sum <- summarise_each(by_sub_act, funs(mean), -subject, -activity, -mode)
sum
sum
View(sum)
View(sum)
tidy_data_tbl <- tbl_df(tidy_data)
sum_data <- (tidy_data_tbl %>% group_by(subject, activity)
%>% summarise_each( funs(mean), -subject, -activity, -mode))
View(sum_data)
View(sum_data)
sum == sum_data
sum(!(sum == sum_data))
!(sum == sum_data)
write.csv(sum_data, "tidysummary.csv")
rm(list = ls())
library(dplyr)
# read features table
features <- read.table("features.txt",
header=FALSE,
sep="",
stringsAsFactors = FALSE,
colClasses =c("numeric", "character")
)
# load train data
train_data <- read.table("train/x_train.txt",
header = FALSE,
sep = "",
colClasses = "numeric"
)
# load test data
test_data <- read.table("test/x_test.txt",
header = FALSE,
sep = "",
colClasses = "numeric"
)
# set column names of train and test data from 2nd column of features table
names(train_data) <- features[,2]
names(test_data) <- features[,2]
#delete features DF
rm("features")
# load activity_labels
activity_labels <- read.table("activity_labels.txt",
header=FALSE, sep="",
stringsAsFactors = FALSE,
colClasses =c("numeric", "character")
)
# load activity table from train and test as factor and set the levels
# of factor according to activity_labels
y_train <- read.table("train/y_train.txt", header = FALSE,
sep ="", colClasses = "factor")
y_test <- read.table("test/y_test.txt", header = FALSE, sep ="",
colClasses = "factor")
attributes(y_train$V1)$levels <- activity_labels$V2
attributes(y_test$V1)$levels <- activity_labels$V2
#bind data table with activity column
train_data <- cbind(y_train, train_data)
test_data <- cbind(y_test, test_data)
# change the name of activity column to activity
names(train_data)[1] <- "activity"
names(test_data)[1] <- "activity"
# delete activity_labels, y_train, y_test DFs
rm("activity_labels") ; rm("y_train"); rm("y_test")
# load subject table
subject_train <- read.table("train/subject_train.txt", header = FALSE,
sep = "", col.names=c("subject"))
subject_test <- read.table("test/subject_test.txt", header = FALSE,
sep = "", col.names=c("subject"))
#bind subject table to data as the first column
train_data <- cbind(subject_train, train_data)
test_data <- cbind(subject_test, test_data)
# delete subject_train, subject_test DF
rm("subject_train") ; rm("subject_test")
# create a column for mode (either train or test) and put it into the table as 3rd column
train_data <- cbind(train_data[,c(1,2)], data.frame(mode=rep(c("train"),7352)),train_data[,3:563])
test_data <- cbind(test_data[,c(1,2)], data.frame(mode=rep(c("test"),2947)),test_data[,3:563])
#combine train data and test data into one table
data_fin <- rbind(train_data,test_data)
# delete train_data, test_data DF
rm("train_data") ; rm("test_data")
#select mean and std columns along with subject,activity, mode columns.
data_fin_mean <- select(data_fin, contains("mean()", ignore.case = FALSE))
data_fin_std <- select(data_fin, contains("std()", ignore.case = FALSE))
data_fin_annotation <- select(data_fin, 1:3)
tidy_data <- cbind(data_fin_annotation, data_fin_mean, data_fin_std)
# output the final data to a csv file
write.csv(tidy_data, "tidydata.csv")
#convert tidy_data to tbl
tidy_data_tbl <- tbl_df(tidy_data)
# group it by subject, activity then summarize mean
sum_data <- (tidy_data_tbl %>% group_by(subject, activity)
%>% summarise_each( funs(mean), -subject, -activity, -mode))
write.csv(sum_data, "tidysummary.csv")
View(sum_data)
View(sum_data)
write.table("summaryout.txt", row.name = FALSE)
list.files()
?write.table
write.table(sum_data, "summaryout.txt", row.name = FALSE)
setwd("../..")
getwd ()
View(sum_data)
rm(list=ls())
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, color = "blue")
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks = 100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta",lwd=4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25 ~ regin, data=pollution, col="red")
boxplot(pm25 ~ region, data=pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region='east')
east <- subset(pollution, region=='east')
heas(east)
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region=="west"), col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(pm25,lattitude))
with(pollution, plot(latitude,pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$pm25, pollution$latitude, col = pollution$region)
plot( pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region =="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
dataset(cars)
library(datasets)
datasets(cars)
dataset(cars)
rm(list=ls())
short <- read.table("household_power_consumption.txt", nrows = 10, sep=";", header=1)
classes <- sapply(short,class)
classes["Date"] <- "character"
classes["Time"] <- "character"
power_con <- read.table("household_power_consumption.txt",
sep=";", header=1,
colClasses = classes, na.strings = "?")
power_con$datetime <- strptime(paste(power_con$Date,power_con$Time), "%d/%m/%Y %H:%M:%S")
power_con <- power_con[,c(10,3,4,5,6,7,8,9)]
power_s <- subset(power_con, (datetime >= '2007-02-01' & datetime < '2007-02-03'))
hist(power_s$Global_active_power,
col="red",
main="Glabal Active Power",
xlab="Global Active Power (kilowatts)",
ylab="Frequency"
)
dev.copy(png, file ="plot1.png", width = 480, height=480)
dev.off()
setwd("~/git-hub/exploratory_project")
# load data
scc <- readRDS("Source_Classification_Code.rds")
pm25 <- readRDS("summarySCC_PM25.rds")
# sum of emissions by year to variable total
total <- tapply(pm25$Emissions, pm25$year, sum, na.rm=TRUE)
# define color for bar graph
color <- rgb(0,0,1, alpha=0.3)
# draw bargrpah using base barplot
barplot(total, col=color, xlab="Year", ylab="PM25 Emission (ton)",
border="red", main="Total PM25 Emission" )
# save as png file
dev.copy(png, filename="plot1.png", width=480, height=480)
dev.off()
# load data
scc <- readRDS("Source_Classification_Code.rds")
pm25 <- readRDS("summarySCC_PM25.rds")
# subset only baltimore data
pm25_baltimore <- subset(pm25, pm25$fips == "24510")
# calculate yearly total for baltimore data
pm25_bal_total <- tapply(pm25_baltimore$Emissions, pm25_baltimore$year, sum, na.rm=TRUE)
# draw bar graph
color <- rgb(0,0,1, alpha=0.3)
barplot(pm25_bal_total, col=color, xlab="Year", ylab="Total PM25 Emission (ton)",
border="red", main="Total PM25 Emission in Baltimore")
dev.copy(png, "plot2.png", width=480, height=480)
dev.off()
# load data
scc <- readRDS("Source_Classification_Code.rds")
pm25 <- readRDS("summarySCC_PM25.rds")
# subset only baltimore data
pm25_baltimore <- subset(pm25, pm25$fips == "24510")
# calculate yearly total for baltimore data
pm25_bal_total <- tapply(pm25_baltimore$Emissions, pm25_baltimore$year, sum, na.rm=TRUE)
library(dplyr)
# calculate sum by type and year groups
pm25_bal_sum <- pm25_baltimore %>% group_by(type, year) %>% summarise(sum_emission=sum(Emissions))
pm25_bal_sum$year <- factor(pm25_bal_sum$year)
pm25_bal_sum$type <- factor(pm25_bal_sum$type)
# plot it into multi facets graph.
library(ggplot2)
g <- ggplot(pm25_bal_sum, aes(year, sum_emission))
g + geom_bar(stat="identity") + facet_grid(.~type)
# load data
scc <- readRDS("Source_Classification_Code.rds")
pm25 <- readRDS("summarySCC_PM25.rds")
# subset only baltimore data
pm25_baltimore <- subset(pm25, pm25$fips == "24510")
# calculate yearly total for baltimore data
pm25_bal_total <- tapply(pm25_baltimore$Emissions, pm25_baltimore$year, sum, na.rm=TRUE)
library(dplyr)
# calculate sum by type and year groups
pm25_bal_sum <- pm25_baltimore %>% group_by(type, year) %>% summarise(sum_emission=sum(Emissions))
pm25_bal_sum$year <- factor(pm25_bal_sum$year)
pm25_bal_sum$type <- factor(pm25_bal_sum$type)
# plot it into multi facets graph.
library(ggplot2)
g <- ggplot(pm25_bal_sum, aes(year, sum_emission))
g + geom_bar(stat="identity") + facet_grid(.~type) +
labs(title="Total Emissions by Type in Baltimore City", ylab="Emissions (ton)")
g <- ggplot(pm25_bal_sum, aes(year, sum_emission))
g + geom_bar(stat="identity") + facet_grid(.~type) +
labs(title="Total Emissions by Type in Baltimore City", y="Emissions (ton)")
g <- ggplot(pm25_bal_sum, aes(year, sum_emission))
g + geom_bar(stat="identity") + facet_grid(.~type) +
labs(title="Total Emissions by Type in Baltimore City", y="Emission (ton)")
dev.copy(png, "plot3.png", width=480, height=480)
dev.off()
